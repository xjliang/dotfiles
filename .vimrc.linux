"-----------------------------------------------------------------------------
" general
"-----------------------------------------------------------------------------
set nocompatible        " use vim as vim, should be put at the very start
set history=100         " lines of Ex-mode commands, search history
set browsedir=buffer    " use directory of the related buffer for file browser
set clipboard+=unnamed  " use clipboard register '*' for all y, d, c, p ops
set viminfo+=!          " make sure it can save viminfo
set isk+=$,%,#,-,@,_    " none of these should be word dividers
set confirm             " raise a dialog confirm whether save changed buffer
set ffs=unix,dos,mac    " favor unix, which behaves good under Linux/Windows
set fenc=utf-8          " default fileencoding
set fencs=utf-8,ucs-bom,euc-jp,gb18030,gbk,gb2312,cp936
map Q gq
                        " do not use Ex-mode, use Q for formatting
filetype on             " enable file type detection
filetype plugin on      " enable loading the plugin for appropriate file type

"-----------------------------------------------------------------------------
" colors
"-----------------------------------------------------------------------------
"colorscheme evening
set background=dark     " use a dark background
set t_Co=256
try
  "colorscheme delek
  colorscheme papercolor
  "let base16colorspace=256
  "colorscheme base16-atelier-forest
catch
  colorscheme darkblue
  highlight Normal ctermfg=Green ctermbg=Black
  highlight Normal guifg=Green guibg=Black
endtry
syntax on               " syntax highlighting

"-----------------------------------------------------------------------------
" Vim UI
"-----------------------------------------------------------------------------
set linespace=1         " space it out a little more (easier to read)
set wildmenu            " type :h and press <Tab> to look what happens
set ruler               " always show current position along the bottom
set cmdheight=2         " use 2 screen lines for command-line
set lazyredraw          " do not redraw while executing macros (much faster)
set number              " print line number
set hid                 " allow to change buffer without saving
set backspace=2         " make backspace work normal
set whichwrap+=<,>,h,l  " allow backspace and cursor keys to wrap
"set mouse=a             " use mouse in all modes
set shortmess=atI       " shorten messages to avoid 'press a key' prompt
set report=0            " tell us when anything is changed via :...
set fillchars=vert:\ ,stl:\ ,stlnc:\

                        " make the splitters between windows be blank
                        " o

"-----------------------------------------------------------------------------
" visual cues
"-----------------------------------------------------------------------------
set showmatch           " show matching paren
set matchtime=5         " 1/10 second to show the matching paren
set hlsearch            " highlight searched for phrases
set incsearch           " BUT do highlight where the typed pattern matches
set scrolloff=3         " minimal number of screen lines to keep above/below the cursor
set novisualbell        " use visual bell instead of beeping
set noerrorbells        " do not make noise
set laststatus=2        " always show the status line
set listchars=tab:\|\ ,trail:.,extends:>,precedes:<,eol:$ " how :set list show
"set statusline=%F%m%r%h%w\ [%{&ff}]\ [%Y]\ [%02v\ %03l\ %L\ %p%%]
                        " need vimbuddy.vim, dislike it? just remove it

set statusline=
set statusline+=\ %f\ %*
set statusline+=\ ››
set statusline+=\ %(%h%1*%m%*%r%w%)
"set statusline+=\ %(%h%1*%m%*%r%w%)%
set statusline+=%=
set statusline+=\ ‹‹
set statusline+=\ %(%Y%)
set statusline+=\ [%{&fileformat}\]
set statusline+=\ %{&fileencoding?&fileencoding:&encoding}
set statusline+=\ ::
set statusline+=\ %*
set statusline+=\ %l\ :\ %c
set statusline+=\ %*

"-----------------------------------------------------------------------------
" text formatting/layout
"-----------------------------------------------------------------------------
set ai                  " autoindent
set si                  " smartindent
"set cindent             " do C-style indenting
set fo=tcrqn            " see help (complex)
set tabstop=2           " tab spacing
set softtabstop=2       " unify it
set shiftwidth=2        " unify it
set expandtab           " real tabs please!
set smarttab            " use tabs at the start of a line, spaces elsewhere
set nowrap              " do not wrap lines
set formatoptions+=mM   " thus vim can reformat multibyte text (e.g. Chinese)

" When editing a file, always jump to the last known cursor position. 
" Don't do it when the position is invalid or when inside an event handler 
" (happens when dropping a file on gvim). 
 autocmd BufReadPost * 
 \ if line("'\"") > 0 && line("'\"") <= line("$") | 
 \ exe "normal g`\"" | 
 \ endif 

"-----------------------------------------------------------------------------
" folding
"-----------------------------------------------------------------------------
"set foldenable          " turn on folding
"set foldmethod=indent   " make folding indent sensitive
"set foldlevel=100       " don't autofold anything, but can still fold manually
"set foldopen -=search   " don't open folds when you search into them
"set foldopen -=undo     " don't open folds when you undo stuff
"set guifont=Monospace\ 11
"set guifont=Liberation_Mono:h12:cANSI
"set guifont=Arial_monospaced_for_SAP:h9:cANSI

"-----------------------------------------------------------------------------
" Mine
"-----------------------------------------------------------------------------
set showcmd
set nobackup
set cmdheight=1
set ignorecase smartcase
set iskeyword=a-z,A-Z,48-57,_
"set timeoutlen=500        " See also 'timeout' and 'ttimeout'.

if has("win32")
  "set guifont=Courier\ New:h12
  set guifont=Consolas:h14
  set guioptions-=T
  set guioptions-=m
  set guioptions-=L
  set guioptions-=r
  set guioptions-=b
  set lines=999 columns=999 " Maximize
else
  set guifont=Courier\ 10\ Pitch\ 13
endif
set cursorline

" quit
nnoremap q :q<CR>
nnoremap Q :q!<CR>
" select all
nnoremap <C-a> ggVG
" quicker save
nnoremap <C-s> :w<CR>

" Yank from current position to end of line just like D, C
nnoremap Y y$

nnoremap z $
nnoremap 5 %
nnoremap 3 #zz
nnoremap 8 *zz
nnoremap n nzz
nnoremap N Nzz

nnoremap j gj
nnoremap k gk

" quicker scrolling
nnoremap <c-e> 5<c-e>
nnoremap <c-y> 5<c-y>

" quicker search
nnoremap bs :%s/
" remove all blank lines
nnoremap bsb :%s/^\n//<CR>

" split window
nnoremap <F2> gf<C-o>:sp #<CR>
nnoremap <F3> gf<C-o>:vs #<CR>

" browse old file history
nnoremap <F6> :bro ol<CR>

nnoremap <leader>cd :cd %:p:h<CR>

" switch between windows
"nnoremap fh <C-w>h
"nnoremap fj <C-w>j 
"nnoremap fk <C-w>k 
"nnoremap fl <C-w>l 

" buffer switch
nnoremap [b :bp<CR>
nnoremap ]b :bn<CR>

" diff
nnoremap dt :diffthis<CR>

" visual block
nnoremap vb <C-v>

" delete to end
nnoremap dz d$

" refresh current file
nnoremap <F5> :e<CR>G

" Disable highlight when <backspace> is pressed
nnoremap <silent> <backspace> :nohl<cr>

" quicker indent
nnoremap <TAB> V>
nnoremap <S-TAB> V<

" view to long lines
nnoremap <C-l> zL
nnoremap <C-h> zH

nnoremap nd ]c
vnoremap z $
vnoremap 5 %
vnoremap <C-c> "*y
vnoremap cc <C-v>I
vnoremap c <C-v>

" adjust indent in V mode
vnoremap <TAB> 2>
vnoremap <TAB><TAB> 4>
vnoremap <S-TAB> 2<
vnoremap <S-TAB><S-TAB> 4<

" save
inoremap <ESC> <ESC>:w<CR>
inoremap <ESC><ESC> <ESC>

" quicker edit
inoremap ( ()<ESC>i
inoremap [ []<ESC>i
inoremap HH <left>
inoremap LL <right>
inoremap {{ {<CR>}<ESC>O

" AutoComplPop configuration.
let g:AutoComplPop_NotEnableAtStartup = 0
let g:AutoComplPop_IgnoreCaseOption = 1

" Search for selected text, forwards or backwards.
" http://vim.wikia.com/wiki/Search_for_visually_selected_text
vnoremap <silent> * :<C-U>
  \let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
  \gvy/<C-R><C-R>=substitute(
  \escape(@", '/\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
  \gV:call setreg('"', old_reg, old_regtype)<CR>
vnoremap <silent> # :<C-U>
  \let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
  \gvy?<C-R><C-R>=substitute(
  \escape(@", '?\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
  \gV:call setreg('"', old_reg, old_regtype)<CR>

"-----------------------------------------------------------------------------
" Obsolete
"-----------------------------------------------------------------------------
"autocmd FileType c,cpp,pl,java,l set guifont=Courier\ 10\ Pitch\ 13   " '\' for space.
"autocmd FileType c,cpp set guifont=Courier\ 12
"autocmd GUIEnter * simalt ~x 
"nnoremap <C-q> :wq<CR>
"nnoremap <C-x> "*p
"if has("win32")
"  source $VIMRUNTIME/mswin.vim
"endif
